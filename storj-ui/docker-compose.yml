services:
  
  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ${PROMETHEUS_MOUNT}:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    networks:
      - "storj-bridge"
    restart: "unless-stopped"

  grafana:
    image: grafana/grafana
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    networks:
      - "storj-bridge"
    volumes:
      - ${GRAFANA_MOUNT}:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
        #- ./dashboard_exporter_combined.json:/etc/grafana/provisioning/dashboards/dashboard_exporter_combined.json
    environment:
      - GF_SECURITY_ADMIN_PASSWORD
      - GF_USERS_ALLOW_SIGN_UP
      - GF_INSTALL_PLUGINS
    restart: "unless-stopped"

  nginx:
    image: nginx:latest
    container_name: "storj-nginx"
    restart: "unless-stopped"
    networks:
      - "storj-bridge"
    ports:
        - "80:80"
    volumes:
        - ./web:/web
        - ./nginx/site.conf:/etc/nginx/conf.d/default.conf

  php:
    image: php:8-fpm
    container_name: "storj-php"
    restart: "unless-stopped"
    user: "0:0"
    command: php-fpm -R
    networks:
      - "storj-bridge"
    environment:
      - DOCKER_HOST_HOSTNAME
    volumes:
      - ./web:/web
      - ./php/www.conf:/usr/local/etc/php-fpm.d/www.conf
      - /var/run/docker.sock:/var/run/docker.sock


networks:
  storj-bridge:
    name: "storj-bridge"
